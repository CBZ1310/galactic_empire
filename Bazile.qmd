---
title: "Galactic Empire"
author: "CÃ©dric BAZILE"
format: html
editor: visual
---

<center>

## Github Link : 

<https://github.com/CBZ1310/galactic_empire>

</center>

<br>

# Setup

```{r}
here::i_am("galactic_empire.Rproj")
library(here)
library(ggplot2)
library(dplyr)
library(tidyr)
library(labelled)
library(readr)
library(stringr)
```

# 1 Main data set import

## Question 3

```{r Importation_of_the_main_dataset}
planets <- read_delim("Main_Dataset/planets.csv")
names(planets) #I check again the name of each column
planets_t <- planets %>% as_tibble()
```

```{r Checking_the_number_of_Planets}
test <- (planets %>% unique() %>% nrow())
answer_to_test <- print(test == 988)
```

At the question, is there 988 rows (and therefore planet), the answer of our test is `r answer_to_test`. We have indeed `r test` rows on the expected 988.

```{r Checking_if_all_the_numeric_values_are_recognized}
c_names <- planets_t %>%  
  select(where(is.numeric))%>%
  names()  

c_names %>%   
  knitr::kable(caption = "List of numeric variable", format = "markdown", align = 'c') 
```

By looking, the list of our data we observe that the "Radius" column was not recognized as a numeric value.

```{r Transformation_of_the_radius_column}
planets_t <- planets_t %>%
  mutate(Radius = as.numeric(Radius))

c_names_2 <- planets_t %>%  
  select(where(is.numeric))%>%
  names()  

c_names_2 %>%   
  knitr::kable(caption = "List of numeric variable", format = "markdown", align = 'c') 
```

<br>

## Question 4

```{r}
planets_t %>% 
  summarize("N_observ" = n(), "N_col"=ncol(.)) %>% 
  knitr::kable(caption = "Format of the dataset", format = "markdown", align = 'c') 


```

```{r}
 planets_t %>%
  summarize(N_observ = n(), N_col = sum(!grepl("^$", colnames(.))))%>% 
  knitr::kable(caption = "Format of the dataset", format = "markdown", align = 'c') 

```

```{r Number_of_missing_values_by_variable}
planets_t %>%
  summarise(across(everything(), list("N_NA" = ~sum(is.na(.))))) %>% 
  pivot_longer(everything(), names_to = "Variable", values_to = "count") %>% 
   knitr::kable(caption = "Number of missing values", format = "markdown", align = 'c') 
```

```{r}
sum(rowSums(is.na(planets_t)) > 0) %>%
  knitr::kable(caption = "Number of observations with at least one missing value", format = "markdown", align = 'c') 

```

<br>

## Question 5

```{r Grapphical_representation_radius_by_density}
planets_t %>% ggplot(aes(x=`DENSITY (EARTH)`,y=Radius)) + geom_point() +
  labs(title = "Radius by density",x = "Density", y = "Radius") + theme_dark()
```

<br>

## Question 6

```{r Extreme_values}
#Star_number
planets_t %>% arrange(Star_number) %>% slice_head()  %>% bind_rows(planets_t %>% arrange(desc(Star_number)) %>% slice_head()) %>% select(PLANET, Star_number) %>% 
  knitr::kable(caption = "Extremums of Star Number", format = "markdown", align = 'c') 

#Density
planets_t %>% arrange(`DENSITY (EARTH)`) %>% slice_head()  %>% bind_rows(planets_t %>% arrange(desc(`DENSITY (EARTH)`)) %>% slice_head()) %>% select(PLANET, `DENSITY (EARTH)`) %>% 
  knitr::kable(caption = "Extremums of density", format = "markdown", align = 'c') 

#Radius
planets_t %>% arrange(Radius) %>% slice_head()  %>% bind_rows(planets_t %>% arrange(desc(Radius)) %>% slice_head()) %>% select(PLANET, Radius) %>% 
  knitr::kable(caption = "Extremums of Radius", format = "markdown", align = 'c') 
```

<br>

# Improved data representation

<br>

## Question 7

```{r}
Extraction <- planets_t %>%
  mutate(Terrain_v2 = str_split(TERRAIN, ", "), Climate_v2 = str_split(CLIMATE, ", ")) %>%
  select(planet_idx, Terrain_v2, Climate_v2) %>%
  unnest(Terrain_v2, .drop = TRUE) %>%
  unnest(Climate_v2, .drop = TRUE)

TERRAIN <- Extraction %>% select(planet_idx, Terrain_v2)
CLIMATE <- Extraction %>% select(planet_idx, Climate_v2)
```

<br>

## Question 8

```{r}
Clim_stat <- CLIMATE %>% group_by(planet_idx) %>% summarise("N_Climate" = n(), .groups = 'drop')

Clim_stat %>% ggplot(aes(x = as.factor(planet_idx), y = N_Climate)) + geom_col() + labs(title = "Number of Climates by Planet", x = "Planet", y = "Number of Climates") + theme_classic() 

Terr_stat <- TERRAIN  %>%   group_by(planet_idx) %>% summarize("N_Terr" = n(), .groups = 'drop')

Terr_stat %>% ggplot(aes(x = as.factor(planet_idx), y = N_Terr))  + geom_col() +
  labs(title = "Number of terrains by planet",x = "Planet", y = "Number of Climats") + theme_classic() 

```

<br>

## Question 9

```{r}
planet_tc2 <- left_join(planets_t, CLIMATE, by = "planet_idx")

planet_tc2 %>% ggplot(aes(x = as.factor(planet_idx), y = MASS))  + geom_bar(stat = "identity") +
  labs(title = "Mass by planet and climate",x = "Planet", y = "Mass") + theme_classic() +  facet_wrap(~ Climate_v2, ncol = 2)

```

<br>

## Question 10

```{r Importation_of_the_main_dataset}
stars <- read_delim("Main_Dataset/all+stars.csv")
names(stars) #I check again the name of each column
stars_t <- stars %>% as_tibble()
```

```{r Checking_if_all_the_numeric_values_are_recognized}
c_names <- stars_t %>%  
  select(where(is.numeric))%>%
  names()  

c_names %>%   
  knitr::kable(caption = "List of numeric variable", format = "markdown", align = 'c') 
```

We have our expected numerical variables.

\## Question 12

```{r}
stars_t2 <- stars_t %>%
  mutate(stellar_type = str_split(`stellar type`, ", ")) %>%
  unnest(stellar_type, .drop = TRUE)
```
